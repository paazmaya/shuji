!function(){if(self.Element&&(Element.prototype.matches||(Element.prototype.matches=Element.prototype.webkitMatchesSelector||Element.prototype.mozMatchesSelector||Element.prototype.msMatchesSelector||Element.prototype.oMatchesSelector||null),Element.prototype.matches)){var a=self.Stretchy={selectors:{base:'textarea, select:not([size]), input:not([type]), input[type="'+"text url email tel".split(" ").join('"], input[type="')+'"]',filter:"*"},script:document.currentScript||t("script").pop(),resize:function(e){if(a.resizes(e)){var t=getComputedStyle(e),i=0;if(!e.value&&e.placeholder){var o=!0;e.value=e.placeholder}var n=e.nodeName.toLowerCase();if("textarea"==n)e.style.height="0","border-box"==t.boxSizing?i=e.offsetHeight:"content-box"==t.boxSizing&&(i=-e.clientHeight),e.style.height=e.scrollHeight+i+"px";else if("input"==n){e.style.width="0","border-box"==t.boxSizing?i=e.offsetWidth:"padding-box"==t.boxSizing&&(i=e.clientWidth),e.scrollLeft=1e10;var r=Math.max(e.scrollLeft+i,e.scrollWidth-e.clientWidth);e.style.width=r+"px"}else if("select"==n){var l,s=document.createElement("_");for(var c in s.textContent=e.options[e.selectedIndex].textContent,e.parentNode.insertBefore(s,e.nextSibling),t)/^(width|webkitLogicalWidth)$/.test(c)||(s.style[c]=t[c],/appearance$/i.test(c)&&(l=c));s.style.width="",0<s.offsetWidth&&(e.style.width=s.offsetWidth+"px",t[l]&&"none"===t[l]||(e.style.width="calc("+e.style.width+" + 2em)")),s.parentNode.removeChild(s),s=null}o&&(e.value="")}},resizeAll:function(e){t(e||a.selectors.base).forEach(function(e){a.resize(e)})},active:!0,resizes:function(e){return e&&e.parentNode&&e.matches&&e.matches(a.selectors.base)&&e.matches(a.selectors.filter)},init:function(){a.selectors.filter=a.script.getAttribute("data-filter")||(t("[data-stretchy-filter]").pop()||document.body).getAttribute("data-stretchy-filter")||Stretchy.selectors.filter||"*",a.resizeAll()},$$:t};"loading"!==document.readyState?a.init():document.addEventListener("DOMContentLoaded",a.init);function e(e){a.active&&a.resize(e.target)}document.body.addEventListener("input",e),document.body.addEventListener("change",e),self.MutationObserver&&new MutationObserver(function(e){a.active&&e.forEach(function(e){"childList"==e.type&&Stretchy.resizeAll(e.addedNodes)})}).observe(document.body,{childList:!0,subtree:!0})}function t(e,t){return e instanceof Node||e instanceof Window?[e]:[].slice.call("string"==typeof e?(t||document).querySelectorAll(e):e||[])}}();
//# sourceMappingURL=stretchy.min.js.map
